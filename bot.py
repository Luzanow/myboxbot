import logging
import os
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from dotenv import load_dotenv

load_dotenv()
API_TOKEN = os.getenv("API_TOKEN")
ADMIN_ID = os.getenv("ADMIN_CHAT_ID")

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot, storage=MemoryStorage())
logging.basicConfig(level=logging.INFO)

class Form(StatesGroup):
    location = State()
    size = State()
    duration = State()
    name = State()
    phone = State()

@dp.message_handler(commands=["start"])
async def start(message: types.Message):
    kb = InlineKeyboardMarkup(row_width=1)
    kb.add(
        InlineKeyboardButton("üìç –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –ª–æ–∫–∞—Ü—ñ—ó", callback_data="view_locations"),
        InlineKeyboardButton("üì¶ –û—Ä–µ–Ω–¥—É–≤–∞—Ç–∏ –±–æ–∫—Å", callback_data="make_request")
    )
    await message.answer("–í—ñ—Ç–∞—î–º–æ –≤ MyBox! –û–±–µ—Ä—ñ—Ç—å –¥—ñ—é:", reply_markup=kb)

@dp.callback_query_handler(lambda c: c.data == "view_locations")
async def view_locations(callback_query: types.CallbackQuery):
    locations = [
        ("üìç–≤—É–ª. –ù–æ–≤–æ–∫–æ—Å—Ç—è–Ω—Ç–∏–Ω—ñ–≤—Å—å–∫–∞, 22/15", "https://maps.app.goo.gl/RpDz2E671UVgkQg57"),
        ("üìç–ø—Ä–æ—Å–ø. –í—ñ–¥—Ä–∞–¥–Ω–∏–π, 107", "https://maps.app.goo.gl/gjmy3mC4TmWH27r87"),
        ("üìç–≤—É–ª. –ö–∏—Ä–∏–ª—ñ–≤—Å—å–∫–∞, 41", "https://maps.app.goo.gl/5QYTYfAWqQ7W8pcm7"),
        ("üìç–≤—É–ª. –î–µ–≥—Ç—è—Ä—ñ–≤—Å—å–∫–∞, 21", "https://maps.app.goo.gl/2zrWpCkeF3r5TMh39"),
        ("üìç–≤—É–ª. C–∞–¥–æ–≤–∞, 16", "https://maps.app.goo.gl/sCb6wYY3YQtVwVao7"),
        ("üìç–≤—É–ª. –ë–µ–∑–Ω—è–∫–æ–≤—Å–∫–∞—è, 21", "https://maps.google.com/?q=50.402645,30.324247"),
        ("üìç–≤—É–ª. –ú–∏–∫–æ–ª–∏ –í–∞—Å–∏–ª–µ–Ω–∫–∞, 2", "https://maps.app.goo.gl/Cp6tUB7DGbLz3bdFA"),
        ("üìç–≤—É–ª. –í—ñ–Ω—Å—Ç–æ–Ω–∞ –ß–µ—Ä—á–∏–ª–ª—è, 42", "https://maps.app.goo.gl/FNuaeyQHFxaxgCai9"),
        ("üìç–≤—É–ª. –õ—É–≥–æ–≤–∞ 9", "https://maps.app.goo.gl/aCrfjN9vbBjhM17YA"),
        ("üìç–≤—É–ª. –Ñ–≤–≥–µ–Ω—ñ—è –•–∞—Ä—á–µ–Ω–∫–∞, 35", "https://maps.app.goo.gl/MpGAvtA6awMYKn7s6"),
        ("üìç–≤—É–ª. –í–æ–ª–æ–¥–∏–º–∏—Ä–∞ –ë—Ä–æ–∂–∫–∞, 38/58", "https://maps.app.goo.gl/vZAjD6eo84t8qyUk6"),
        ("üìç–≤—É–ª. –ú–µ–∂–∏–≥—ñ—Ä—Å—å–∫–∞, 78", "https://maps.app.goo.gl/MpGAvtA6awMYKn7s6")
    ]
    for name, url in locations:
        btn = InlineKeyboardMarkup().add(InlineKeyboardButton("–í—ñ–¥–∫—Ä–∏—Ç–∏ –Ω–∞ –∫–∞—Ä—Ç—ñ", url=url))
        await bot.send_message(callback_query.from_user.id, f"–õ–æ–∫–∞—Ü—ñ—è: {name}", reply_markup=btn)

@dp.callback_query_handler(lambda c: c.data == "make_request")
async def start_request(callback_query: types.CallbackQuery):
    kb = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    kb.add(
        "–≤—É–ª. –ù–æ–≤–æ–∫–æ—Å—Ç—è–Ω—Ç–∏–Ω—ñ–≤—Å—å–∫–∞, 22/15",
        "–ø—Ä–æ—Å–ø. –í—ñ–¥—Ä–∞–¥–Ω–∏–π, 107",
        "–≤—É–ª. –ö–∏—Ä–∏–ª—ñ–≤—Å—å–∫–∞, 41",
        "–≤—É–ª. –î–µ–≥—Ç—è—Ä—ñ–≤—Å—å–∫–∞, 21",
        "–≤—É–ª. C–∞–¥–æ–≤–∞, 16",
        "–≤—É–ª. –ë–µ–∑–Ω—è–∫–æ–≤—Å–∫–∞—è, 21",
        "–≤—É–ª. –ú–∏–∫–æ–ª–∏ –í–∞—Å–∏–ª–µ–Ω–∫–∞, 2",
        "–≤—É–ª. –í—ñ–Ω—Å—Ç–æ–Ω–∞ –ß–µ—Ä—á–∏–ª–ª—è, 42",
        "–≤—É–ª. –õ—É–≥–æ–≤–∞ 9",
        "–≤—É–ª. –Ñ–≤–≥–µ–Ω—ñ—è –•–∞—Ä—á–µ–Ω–∫–∞, 35",
        "–≤—É–ª. –í–æ–ª–æ–¥–∏–º–∏—Ä–∞ –ë—Ä–æ–∂–∫–∞, 38/58",
        "–≤—É–ª. –ú–µ–∂–∏–≥—ñ—Ä—Å—å–∫–∞, 78"
    )
    await Form.location.set()
    await bot.send_message(callback_query.from_user.id, "–û–±–µ—Ä—ñ—Ç—å –ª–æ–∫–∞—Ü—ñ—é:", reply_markup=kb)

@dp.message_handler(state=Form.location)
async def get_location(message: types.Message, state: FSMContext):
    await state.update_data(location=message.text)
    kb = ReplyKeyboardMarkup(resize_keyboard=True).add("5 –º¬≤", "10 –º¬≤", "15 –º¬≤")
    await Form.next()
    await message.answer("–û–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–º—ñ—Ä –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:", reply_markup=kb)

@dp.message_handler(state=Form.size)
async def get_size(message: types.Message, state: FSMContext):
    await state.update_data(size=message.text)
    kb = ReplyKeyboardMarkup(resize_keyboard=True).add(
        "1‚Äì3 –º—ñ—Å—è—Ü—ñ", "3‚Äì6 –º—ñ—Å—è—Ü—ñ–≤ (-5%)", "6‚Äì12 –º—ñ—Å—è—Ü—ñ–≤ (-10%)"
    )
    await Form.next()
    await message.answer("–û–±–µ—Ä—ñ—Ç—å —Ç–µ—Ä–º—ñ–Ω –æ—Ä–µ–Ω–¥–∏:\n\nüßæ –ó–Ω–∏–∂–∫–∞ –¥—ñ—î –ª–∏—à–µ –ø—Ä–∏ –ø–æ–≤–Ω—ñ–π –æ–ø–ª–∞—Ç—ñ –∑–∞ –≤–∏–±—Ä–∞–Ω–∏–π –ø–µ—Ä—ñ–æ–¥", reply_markup=kb)

@dp.message_handler(state=Form.duration)
async def get_duration(message: types.Message, state: FSMContext):
    await state.update_data(duration=message.text)
    await Form.next()
    await message.answer("–í–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ —ñ–º‚Äô—è:", reply_markup=types.ReplyKeyboardRemove())

@dp.message_handler(state=Form.name)
async def get_name(message: types.Message, state: FSMContext):
    await state.update_data(name=message.text)
    kb = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True).add(
        KeyboardButton("üì± –ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è –Ω–æ–º–µ—Ä–æ–º", request_contact=True)
    )
    await Form.next()
    await message.answer("–ù–∞–¥—ñ—à–ª—ñ—Ç—å –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É:", reply_markup=kb)

@dp.message_handler(content_types=types.ContentType.CONTACT, state=Form.phone)
async def get_phone_contact(message: types.Message, state: FSMContext):
    phone = message.contact.phone_number
    await finish(message, phone, state)

@dp.message_handler(state=Form.phone)
async def get_phone_text(message: types.Message, state: FSMContext):
    await finish(message, message.text, state)

async def finish(message: types.Message, phone, state: FSMContext):
    data = await state.get_data()
    text = (
        f"–ù–æ–≤–∞ –∑–∞—è–≤–∫–∞:\n\n"
        f"–õ–æ–∫–∞—Ü—ñ—è: {data['location']}\n"
        f"–†–æ–∑–º—ñ—Ä: {data['size']}\n"
        f"–¢–µ—Ä–º—ñ–Ω: {data['duration']}\n"
        f"–Ü–º‚Äô—è: {data['name']}\n"
        f"–¢–µ–ª–µ—Ñ–æ–Ω: {phone}"
    )
    await bot.send_message(ADMIN_ID, text)
    await message.answer("–î—è–∫—É—î–º–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞–¥—ñ—Å–ª–∞–Ω–∞. –ú–∏ –∑ –≤–∞–º–∏ –∑–≤'—è–∂–µ–º–æ—Å—å –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º.", reply_markup=types.ReplyKeyboardRemove())
    await state.finish()

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
