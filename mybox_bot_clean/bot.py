import logging
import os
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from dotenv import load_dotenv

load_dotenv()
API_TOKEN = os.getenv("API_TOKEN")
ADMIN_ID = os.getenv("ADMIN_CHAT_ID")

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot, storage=MemoryStorage())
logging.basicConfig(level=logging.INFO)

class Form(StatesGroup):
    location = State()
    size = State()
    duration = State()
    name = State()
    phone = State()

@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    kb = InlineKeyboardMarkup()
    kb.add(InlineKeyboardButton("üìç –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –ª–æ–∫–∞—Ü—ñ—ó", callback_data="view_locations"))
    kb.add(InlineKeyboardButton("üìù –ó–∞–ª–∏—à–∏—Ç–∏ –∑–∞—è–≤–∫—É", callback_data="make_request"))
    await message.answer("–í—ñ—Ç–∞—î–º–æ –≤ MyBox! –û–±–µ—Ä—ñ—Ç—å –¥—ñ—é:", reply_markup=kb)

@dp.callback_query_handler(lambda c: c.data == 'view_locations')
async def show_locations(callback_query: types.CallbackQuery):
    locations = [
        ("–≤—É–ª. –ù–æ–≤–æ–∫–æ—Å—Ç—è–Ω—Ç–∏–Ω—ñ–≤—Å—å–∫–∞, 22/15", "https://maps.google.com/?q=50.484716,30.490153"),
        ("–ø—Ä–æ—Å–ø. –í—ñ–¥—Ä–∞–¥–Ω–∏–π, 107", "https://maps.google.com/?q=50.421183,30.413375"),
        ("–≤—É–ª. –ö–∏—Ä–∏–ª—ñ–≤—Å—å–∫–∞, 41", "https://maps.google.com/?q=50.471213,30.486702"),
        ("–≤—É–ª. –î–µ–≥—Ç—è—Ä—ñ–≤—Å—å–∫–∞, 21", "https://maps.google.com/?q=50.456731,30.446587"),
        ("–≤—É–ª. –ü–ª–æ–¥–æ–≤–∞, 1", "https://maps.google.com/?q=50.470805,30.509093"),
        ("–≤—É–ª. –ë–µ–∑–Ω—è–∫–æ–≤—Å—å–∫–∞, 21", "https://maps.google.com/?q=50.402645,30.532423"),
        ("–≤—É–ª. –°–≤—è—Ç–æ-–ü–æ–∫—Ä–æ–≤—Å—å–∫–∞, 213", "https://maps.google.com/?q=50.479441,30.645763"),
        ("–≤—É–ª. –ú–∏–∫–æ–ª–∏ –í–∞—Å–∏–ª–µ–Ω–∫–∞, 2", "https://maps.google.com/?q=50.424185,30.412937"),
        ("–≤—É–ª. –ú–∞–≥–Ω—ñ—Ç–æ–≥–æ—Ä—Å—å–∫–∞, 1", "https://maps.google.com/?q=50.480893,30.625463"),
        ("–≤—É–ª. –õ—É–≥–æ–≤–∞, 9", "https://maps.google.com/?q=50.501441,30.482916"),
        ("–≤—É–ª. –Ñ–≤–≥–µ–Ω—ñ—è –•–∞—Ä—á–µ–Ω–∫–∞, 35", "https://maps.google.com/?q=50.438159,30.723826"),
        ("–≤—É–ª. –í–æ–ª–æ–¥–∏–º–∏—Ä–∞ –ë—Ä–æ–∂–∫–∞, 38/58", "https://maps.google.com/?q=50.501147,30.617984"),
        ("–≤—É–ª. –ú–µ–∂–∏–≥—ñ—Ä—Å—å–∫–∞, 78", "https://maps.google.com/?q=50.472167,30.512769")
    ]
    for name, link in locations:
        btn = InlineKeyboardMarkup().add(InlineKeyboardButton("–í—ñ–¥–∫—Ä–∏—Ç–∏ –Ω–∞ –∫–∞—Ä—Ç—ñ", url=link))
        await bot.send_message(callback_query.from_user.id, f"–õ–æ–∫–∞—Ü—ñ—è: {name}", reply_markup=btn)

@dp.callback_query_handler(lambda c: c.data == 'make_request')
async def request_start(callback_query: types.CallbackQuery, state: FSMContext):
    kb = ReplyKeyboardMarkup(resize_keyboard=True)
    for name, _ in [
        ("–≤—É–ª. –ù–æ–≤–æ–∫–æ—Å—Ç—è–Ω—Ç–∏–Ω—ñ–≤—Å—å–∫–∞, 22/15", ""),
        ("–ø—Ä–æ—Å–ø. –í—ñ–¥—Ä–∞–¥–Ω–∏–π, 107", ""),
        ("–≤—É–ª. –ö–∏—Ä–∏–ª—ñ–≤—Å—å–∫–∞, 41", ""),
        ("–≤—É–ª. –î–µ–≥—Ç—è—Ä—ñ–≤—Å—å–∫–∞, 21", ""),
        ("–≤—É–ª. –ü–ª–æ–¥–æ–≤–∞, 1", ""),
        ("–≤—É–ª. –ë–µ–∑–Ω—è–∫–æ–≤—Å—å–∫–∞, 21", ""),
        ("–≤—É–ª. –°–≤—è—Ç–æ-–ü–æ–∫—Ä–æ–≤—Å—å–∫–∞, 213", ""),
        ("–≤—É–ª. –ú–∏–∫–æ–ª–∏ –í–∞—Å–∏–ª–µ–Ω–∫–∞, 2", ""),
        ("–≤—É–ª. –ú–∞–≥–Ω—ñ—Ç–æ–≥–æ—Ä—Å—å–∫–∞, 1", ""),
        ("–≤—É–ª. –õ—É–≥–æ–≤–∞, 9", ""),
        ("–≤—É–ª. –Ñ–≤–≥–µ–Ω—ñ—è –•–∞—Ä—á–µ–Ω–∫–∞, 35", ""),
        ("–≤—É–ª. –í–æ–ª–æ–¥–∏–º–∏—Ä–∞ –ë—Ä–æ–∂–∫–∞, 38/58", ""),
        ("–≤—É–ª. –ú–µ–∂–∏–≥—ñ—Ä—Å—å–∫–∞, 78", "")
    ]:
        kb.add(name)
    await Form.location.set()
    await bot.send_message(callback_query.from_user.id, "–û–±–µ—Ä—ñ—Ç—å –ª–æ–∫–∞—Ü—ñ—é:", reply_markup=kb)

@dp.message_handler(state=Form.location)
async def set_location(message: types.Message, state: FSMContext):
    await state.update_data(location=message.text)
    kb = ReplyKeyboardMarkup(resize_keyboard=True)
    kb.add("5 –º¬≤", "10 –º¬≤", "15 –º¬≤")
    await Form.next()
    await message.answer("–û–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–º—ñ—Ä –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:", reply_markup=kb)

@dp.message_handler(state=Form.size)
async def set_size(message: types.Message, state: FSMContext):
    await state.update_data(size=message.text)
    kb = ReplyKeyboardMarkup(resize_keyboard=True)
    kb.add("1‚Äì3 –º—ñ—Å—è—Ü—ñ", "3‚Äì6 –º—ñ—Å—è—Ü—ñ–≤ (-5%)", "6‚Äì12 –º—ñ—Å—è—Ü—ñ–≤ (-10%)")
    await Form.
    next()
    await message.answer("–û–±–µ—Ä—ñ—Ç—å —Ç–µ—Ä–º—ñ–Ω –æ—Ä–µ–Ω–¥–∏:\n\nüßæ –ó–Ω–∏–∂–∫–∞ –¥—ñ—î –ª–∏—à–µ –ø—Ä–∏ –ø–æ–≤–Ω—ñ–π –æ–ø–ª–∞—Ç—ñ –∑–∞ –≤–∏–±—Ä–∞–Ω–∏–π –ø–µ—Ä—ñ–æ–¥", reply_markup=kb)

@dp.message_handler(state=Form.duration)
async def set_duration(message: types.Message, state: FSMContext):
    await state.update_data(duration=message.text)
    await Form.next()
    await message.answer("–í–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ —ñ–º‚Äô—è:")

@dp.message_handler(state=Form.name)
async def set_name(message: types.Message, state: FSMContext):
    await state.update_data(name=message.text)
    kb = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    kb.add(KeyboardButton("üì± –ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è –Ω–æ–º–µ—Ä–æ–º", request_contact=True))
    await Form.next()
    await message.answer("–ù–∞–¥—ñ—à–ª—ñ—Ç—å –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É:", reply_markup=kb)

@dp.message_handler(content_types=types.ContentType.CONTACT, state=Form.phone)
async def process_contact(message: types.Message, state: FSMContext):
    phone = message.contact.phone_number
    await finish_request(message, phone, state)

@dp.message_handler(state=Form.phone)
async def set_phone_manual(message: types.Message, state: FSMContext):
    await finish_request(message, message.text, state)

async def finish_request(message: types.Message, phone, state: FSMContext):
    data = await state.get_data()
    text = (
        f"–ù–æ–≤–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –æ—Ä–µ–Ω–¥—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:\n\n"
        f"–õ–æ–∫–∞—Ü—ñ—è: {data['location']}\n"
        f"–†–æ–∑–º—ñ—Ä: {data['size']}\n"
        f"–¢–µ—Ä–º—ñ–Ω: {data['duration']}\n"
        f"–Ü–º‚Äô—è: {data['name']}\n"
        f"–¢–µ–ª–µ—Ñ–æ–Ω: {phone}"
    )
    await bot.send_message(ADMIN_ID, text)
    await message.answer("–î—è–∫—É—î–º–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞–¥—ñ—Å–ª–∞–Ω–∞. –û—á—ñ–∫—É–π—Ç–µ –¥–∑–≤—ñ–Ω–∫–∞.")
    await state.finish()
